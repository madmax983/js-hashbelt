{"version":3,"sources":["../code/index.jsy"],"names":["BasicHashbeltMap","constructor","opts","createTip","create","bind","Map","tip","Object","defineProperties","_createTip","value","_belt","writable","_tid","setAutoRotateInterval","ms_delay","clearInterval","tid","setInterval","rotate","unref","_cull_hashbelt","concat","belt","has","key","each","_hit_has","coll","get","_hit_get","set","_hit_set","delete","_hit_delete","clear","previous","entries","seen","Set","sz","size","entry","add","Symbol","iterator","keys","values","forEach","callback","thisArg","HashbeltMap","capacity","slice","autoRotate","UseCachingHashbeltMap","CachingHashbeltMap"],"mappings":"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","file":"index.js","sourcesContent":["\nexport class BasicHashbeltMap ::\n  constructor(opts) ::\n    if null == opts :: opts = {}\n\n    const createTip = opts.create\n      ? opts.create.bind(opts)\n      : () => new Map()\n\n    const tip = null != opts.tip\n      ? createTip()\n      : opts.tip\n\n    Object.defineProperties @ this, @:\n        _createTip: @: value: createTip\n      , _belt: @: writable: true, value: [tip]\n      , _tid: @: writable: true, value: null\n\n\n  setAutoRotateInterval(ms_delay) ::\n    if this._tid :: clearInterval(this._tid)\n    if null != ms_delay ::\n      const tid = setInterval @ () => this.rotate(), ms_delay\n      if 'function' === typeof tid.unref ::\n        tid.unref()\n      this._tid = tid\n    return this\n\n  rotate() ::\n    this._belt = this._cull_hashbelt @\n      [this._createTip()]\n        .concat @ this._belt\n    return this\n\n  _cull_hashbelt(belt) :: return belt\n\n\n\n  has(key) ::\n    for const each of this._belt ::\n      if each.has(key) ::\n        this._hit_has(key, each)\n        return true\n    return false\n\n  _hit_has(key, coll) ::\n\n\n  get() ::\n    for const each of this._belt ::\n      if each.has(key) ::\n        const value = each.get(key)\n        this._hit_get(key, value, each)\n        return value\n    return false\n\n  _hit_get(key, value, coll) ::\n\n\n  set(key, value) ::\n    const tip = this._belt[0]\n    this._hit_set(key, value, tip)\n    return tip.set(key, value)\n\n  _hit_set(key, value, coll) ::\n\n\n  delete(key) ::\n    for const each of this._belt ::\n      if each.has(key) ::\n        this._hit_delete(key, each)\n        each.delete(key)\n\n  _hit_delete(key, coll) ::\n\n\n\n  clear() ::\n    const previous = this._belt\n    this._belt = [new this._createTip()]\n\n    if previous ::\n      for const each of previous ::\n        each.clear()\n\n\n  *entries() ::\n    const seen = new Set()\n    let sz = seen.size\n\n    for const each of this._belt ::\n      for const entry of each.entries() ::\n        seen.add(entry[0])\n        if sz !== seen.size ::\n          sz = seen.size\n          yield entry\n\n  [Symbol.iterator]() ::\n    return this.entries()\n  *keys() ::\n    for const entry of this.entries() ::\n      yield entry[0]\n  *values() ::\n    for const entry of this.entries() ::\n      yield entry[1]\n  forEach(callback, thisArg) ::\n    return new Map(this.entries()).forEach(callback, thisArg)\n\n\n\nexport class HashbeltMap extends BasicHashbeltMap ::\n  constructor(opts) ::\n    if null == opts :: opts = {}\n    super(opts)\n    Object.defineProperties @ this, @:\n        capacity: @: value: opts.capacity || 5\n\n  _cull_hashbelt(belt) ::\n    const capacity = this.capacity\n    if null != capacity ::\n      belt = belt.slice @ 0, this.capacity\n    return belt\n\n  autoRotate(ms_delay=60000) ::\n    return this.setAutoRotateInterval(ms_delay)\n\n\nexport class UseCachingHashbeltMap extends HashbeltMap ::\n  _hit_get(key, value, coll) ::\n    // copy the hit to the front of the cache\n    const tip = this._belt[0]\n    tip.set(key, value)\n    \nexport const CachingHashbeltMap = UseCachingHashbeltMap\n\n"]}