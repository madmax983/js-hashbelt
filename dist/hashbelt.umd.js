!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.hashbelt={})}(this,function(t){"use strict";class e{constructor(t){null==t?t={}:"function"==typeof t&&(t={create:t});const e="function"==typeof t.create?t.create.bind(t):()=>new Map,s=null!=t.tip?t.tip:e();Object.defineProperties(this,{_createTip:{value:e},_belt:{writable:!0,value:[s]},_tid:{writable:!0,value:null}})}setAutoRotateInterval(t){if(this._tid&&clearInterval(this._tid),null!=t){const e=setInterval(()=>this.rotate(),t);e.unref&&e.unref(),this._tid=e}return this}rotate(){return this._belt=this._cull_hashbelt([this._createTip()].concat(this._belt)),this}_cull_hashbelt(t){return t}has(t){for(const e of this._belt)if(e.has(t))return this._hit_has(t,e),!0;return!!this._miss_has(t)}_hit_has(t,e){}_miss_has(t){}get(t){for(const e of this._belt)if(e.has(t)){const s=e.get(t);return this._hit_get(t,s,e),s}return this._miss_get(t)}_hit_get(t,e,s){}_miss_get(t){}set(t,e){const s=this._belt[0];return this._hit_set(t,e,s),s.set(t,e),this}_hit_set(t,e,s){}delete(t){for(const e of this._belt)if(e.has(t))return this._hit_delete(t,e),e.delete(t);return!!this._miss_delete(t)}_hit_delete(t,e){}_miss_delete(t){}clear(){const t=this._belt;if(this._belt=[new this._createTip],t)for(const e of t)e.clear()}*entries(){const t=new Set;let e=t.size;for(const s of this._belt)for(const i of s.entries())t.add(i[0]),e!==t.size&&(e=t.size,yield i)}[Symbol.iterator](){return this.entries()}*keys(){for(const t of this.entries())yield t[0]}*values(){for(const t of this.entries())yield t[1]}forEach(t,e){return new Map(this.entries()).forEach(t,e)}}class s extends e{constructor(t){null==t&&(t={}),super(t),Object.defineProperties(this,{capacity:{value:t.capacity||5}})}_cull_hashbelt(t){const e=this.capacity;if(null!=e&&e<t.length){const s=t.slice(e);t=t.slice(0,e),this._trim(s,t)}return t}_trim(t){}autoRotate(t=6e4){return this.setAutoRotateInterval(t)}}const i=s;class n extends s{_hit_get(t,e,s){this._belt[0].set(t,e)}}const r=n,h=n;t.BasicHashbeltMap=e,t.HashbeltMap=s,t.Hashbelt=i,t.ReadCachingHashbeltMap=n,t.CachingHashbeltMap=r,t.CachingHashbelt=h,t.default=function(t){return new n(t)},Object.defineProperty(t,"__esModule",{value:!0})});
